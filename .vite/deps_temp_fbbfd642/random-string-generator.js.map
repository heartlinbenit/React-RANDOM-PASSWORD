{
  "version": 3,
  "sources": ["../../node_modules/random-string-generator/dist/random.mjs"],
  "sourcesContent": ["var lower = 'abcdefghijklmnopqrstuvwxyz';\nvar upper = lower.toUpperCase();\nvar numeric = '0123456789';\nvar types = {\n    lower: lower,\n    upper: upper,\n    numeric: numeric,\n    lowernumeric: \"\".concat(lower).concat(numeric),\n    uppernumeric: \"\".concat(upper).concat(numeric),\n    alphanumeric: \"\".concat(lower).concat(upper).concat(numeric)\n};\nvar typeKeys = Object.keys(types);\n/**\n * Generate random string\n *\n * @param {number} length The length of the random string\n * @param {string} type The type of the random string\n * @returns {string}\n*/\nfunction random (length, type) {\n    switch (arguments.length) {\n        case 0:\n            length = 12;\n            type = 'alphanumeric';\n            break;\n        case 1:\n            if (typeof arguments[0] === 'string') {\n                length = 12;\n                type = arguments[0];\n            }\n            else {\n                type = 'alphanumeric';\n            }\n            break;\n    }\n    if (typeof length !== 'number')\n        throw new Error('length must be a number, but you give a ' + typeof length + '.');\n    if (typeof type !== 'string') {\n        throw new Error('type must be a string, but you give a ' + typeof type + '.');\n    }\n    else if (!~typeKeys.indexOf(type) && !/^scoped:.+$/.test(type)) {\n        throw new Error('type must be one of ' + typeKeys.join(', ') + ', scoped:*, but you not.');\n    }\n    var splitedTypes = type.split(':').map(function (v) { return v.trim(); });\n    var t = '';\n    if (splitedTypes[0] !== 'scoped') {\n        t = types[type];\n    }\n    else if (typeof splitedTypes[1] === 'string' && splitedTypes[1].length) {\n        t = splitedTypes[1];\n    }\n    var str = '';\n    var l = t.length;\n    for (var i = 0; i < length; i++) {\n        str += t.charAt(Math.floor(Math.random() * l));\n    }\n    return str;\n}\n\nexport { random as default };\n"],
  "mappings": ";;;AAAA,IAAI,QAAQ;AACZ,IAAI,QAAQ,MAAM,YAAY;AAC9B,IAAI,UAAU;AACd,IAAI,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc,GAAG,OAAO,KAAK,EAAE,OAAO,OAAO;AAAA,EAC7C,cAAc,GAAG,OAAO,KAAK,EAAE,OAAO,OAAO;AAAA,EAC7C,cAAc,GAAG,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,OAAO;AAC/D;AACA,IAAI,WAAW,OAAO,KAAK,KAAK;AAQhC,SAAS,OAAQ,QAAQ,MAAM;AAC3B,UAAQ,UAAU,QAAQ;AAAA,IACtB,KAAK;AACD,eAAS;AACT,aAAO;AACP;AAAA,IACJ,KAAK;AACD,UAAI,OAAO,UAAU,CAAC,MAAM,UAAU;AAClC,iBAAS;AACT,eAAO,UAAU,CAAC;AAAA,MACtB,OACK;AACD,eAAO;AAAA,MACX;AACA;AAAA,EACR;AACA,MAAI,OAAO,WAAW;AAClB,UAAM,IAAI,MAAM,6CAA6C,OAAO,SAAS,GAAG;AACpF,MAAI,OAAO,SAAS,UAAU;AAC1B,UAAM,IAAI,MAAM,2CAA2C,OAAO,OAAO,GAAG;AAAA,EAChF,WACS,CAAC,CAAC,SAAS,QAAQ,IAAI,KAAK,CAAC,cAAc,KAAK,IAAI,GAAG;AAC5D,UAAM,IAAI,MAAM,yBAAyB,SAAS,KAAK,IAAI,IAAI,0BAA0B;AAAA,EAC7F;AACA,MAAI,eAAe,KAAK,MAAM,GAAG,EAAE,IAAI,SAAU,GAAG;AAAE,WAAO,EAAE,KAAK;AAAA,EAAG,CAAC;AACxE,MAAI,IAAI;AACR,MAAI,aAAa,CAAC,MAAM,UAAU;AAC9B,QAAI,MAAM,IAAI;AAAA,EAClB,WACS,OAAO,aAAa,CAAC,MAAM,YAAY,aAAa,CAAC,EAAE,QAAQ;AACpE,QAAI,aAAa,CAAC;AAAA,EACtB;AACA,MAAI,MAAM;AACV,MAAI,IAAI,EAAE;AACV,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,WAAO,EAAE,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC;AAAA,EACjD;AACA,SAAO;AACX;",
  "names": []
}
